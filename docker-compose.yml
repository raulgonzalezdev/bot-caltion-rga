version: '3.4'

services:
  verba:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - WEAVIATE_URL_VERBA=http://weaviate:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - UNSTRUCTURED_API_KEY=${UNSTRUCTURED_API_KEY}
      - UNSTRUCTURED_API_URL=${UNSTRUCTURED_API_URL}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DATABASE_URL=postgresql+psycopg://ai:ai@postgres:5432/ai   # Aseg√∫rate de usar el nombre del servicio 'postgres'
    volumes:
      - ./data:/data/
    depends_on:
      weaviate:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8001 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - network_bot

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: semitechnologies/weaviate:1.24.2
    ports:
      - "8080:8080"
      - "3000:8080"
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    environment:
      OPENAI_APIKEY: ${OPENAI_API_KEY}
      COHERE_APIKEY: ${COHERE_API_KEY}
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_MODULES: 'text2vec-openai, generative-openai, qna-openai, text2vec-cohere'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - network_bot

  postgres:
    image: phidata/pgvector:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ai
      POSTGRES_PASSWORD: ai
      POSTGRES_DB: ai
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - network_bot
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  weaviate_data: {}
  pgdata: {}

networks:
  network_bot:
